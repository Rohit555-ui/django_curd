1= Install python3-----cmd: sudo apt-get install python3
2= Install pip3-----cmd: sudo apt-get install python3-pip
3= create virtual env-----cmd: python3 -m venv env(it creates a folder naming env)
4= activate env-----cmd: source env/bin/active(now you are virtual env now all packages will be install for this vir env only)
5= create project-----cmd: django-admin startproject POLITICS(now same folder and manage.py under POLITICS will be create)
6= create app-----cmd: python3 manage.py startapp app_name(it will create app for apis)
   NOTE POINT = created app should be added in INSTALLED_APPS in setting.py
7= after setting database config in DATABASES key in setting.py
   cmd command to install its driver to connect database
   cmd1 = sudo apt-get install libmysqlclient-dev
   cmd2 = pip3 install mysqlclient

8= for database changes
    cmd1 = python3 manage.py makemigrations app_name or not given(if you want to apply changes of all apps)
    cmd2 = python3 manage.py migrate

9= to create all tables of django provided(auth_group, auth_user, auth....)
    cmd1 = python3 manage.py makemigrations
    cmd2 = python3 manage.py migrate


-----------------------Git Configuration------------------------
1 = install git
    after coming to desired directory(which you want to make git repo)
2 = set username and email to tell git that who you are
    cmd1 = git config --global user.name your_name
    cmd2 = git config --global user.email your_email
3 = create .git folder
    cmd1 = git init(it ceates .git folder in this folder to make it git repo)

4 = To check status
    cmd1 = git status

    untracked     unmodified      modified       staged
    git add
    ----------------------------------------------->>
                    edit
                    ------------------>>
                                        git add
       remove                           ------------>
     <<-------------                        commit
                    <<--------------------------------

git add =>> it adds changes of file in staging area
git commit =>> it commits changes from staging area

5 = to replace all file to previous
    cmd1 = git checkout file_name or -f(to all files)

6 = git logs (to show all commits)

7 = to remove file from staging area
    git rm --cached filename

8 = to ignore file from git, create .git ignore file

          (GIT HUB SERVICE)
1 = create account and repo
2 = after creating repo, will get url to clone code from git to local
3 = add remote repo to local repo
    git remote add origin repo-path
4 = if needed to set url for origin
    git remote set-url origin repo-path